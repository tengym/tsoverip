#include <stdio.h>#include <stdlib.h>#include <string.h>#include <pthread.h>#include <netinet/in.h>#include <arpa/inet.h>#ifndef __RTP_MULTICAST_API_H__#define __RTP_MULTICAST_API_H__#ifdef __cplusplusextern "C"{#endif#define RTP_MULTICAST_FAILURE	(-1) /*operate failure*/#define RTP_MULTICAST_SUCCESS   (0)  /*operate success*/#define RTP_MULTICAST_NULL      (-2) /*null poiter*/#define RTP_MULTICAST_TRUE	    (1)#define RTP_MULTICAST_FALSE	    (0)#define MAX_RTP_MULTICAST_ONLINE_NUM 120typedef enum{	RTP_MULTICAST_SEND = 0x01,	RTP_MULTICAST_RECEIVE,	RTP_MULTICAST_BULT}RTP_MULTICAST_TYPE;typedef void (*RTP_MULTICAST_RECVMSG_FUNC)(unsigned char *data, int datalen);extern signed int rtp_multicast_init(void);extern signed int rtp_multicast_deinit(void);extern signed int rtp_multicast_addroute(const char *ipaddr, const char *netdevice);extern signed int rtp_multicast_create(RTP_MULTICAST_TYPE type, int payloadtype, int port, const char *ipaddr, int *rtphandle);extern signed int rtp_multicast_destory(int rtphandle);extern signed int rtp_multicast_sendmsg(int rtphandle, const char *data, int datalen, int payloadtype);extern signed int rtp_multicast_unregister_recvmsg_func(int rtphandle);extern signed int rtp_multicast_register_recvmsg_func(int rtphandle, RTP_MULTICAST_RECVMSG_FUNC recvfunc);extern signed int rtp_multicast_open_recvmsg(int rtphandle);extern signed int rtp_multicast_close_recvmsg(int rtphandle);#ifdef __cplusplus}#endif#endif